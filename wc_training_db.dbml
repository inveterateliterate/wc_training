Project WCTraining {
  database_type: 'PostgreSQL'
  Note: '''
    # WC Training Database
  '''
}

// Enum for 'ConditioningSet' below
Enum run_types {
  timed_run // or for_distance
  hundreds_on_the_minute
  speed_training_yards
  yard_sets // 25
  distanced_run // or for_time
}

Table ConditioningSet as CS {
  id int [pk, increment] // auto-increment
  run_type run_types
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id) [pk]
  }
}

// Enum for 'ConditioningExercise' below
Enum units {
  yards
  miles
}

Table ConditioningExercise as CE {
  id int [pk, increment] // auto-increment
  name varchar
  distance integer // how to do the suicide set?
  unit units
  int_rest_time integer // minutes
  time_goal integer // minutes
  suicide_set string // ? // can be the 25yds
  description text
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id) [pk]
  }
}

Table ConditioningSetConditioningExercise as CSCE {
  id int [pk, increment] // auto-increment
  conditioning_set_id int [ref: > CS.id]
  conditioning_exercise_id int [ref: > CE.id]
  num_reps integer
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id, conditioning_set_id, conditioning_exercise_id) [pk]
  }
}

Table LiftingSet as LS {
  id int [pk, increment] // auto-increment
  num_reps integer
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id) [pk]
  }
}

Table LiftingExercise as LE {
  id int [pk, increment] // auto-increment
  name string
  description text
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id) [pk]
  }
}

Table LiftingSetLiftingExercise as LSLE {
  id int [pk, increment] // auto-increment
  lifting_set_id int [ref: > LS.id]
  lifting_exercise_id int [ref: > LE.id]
  between_sets boolean [default: false] // used for scoping
  num_reps integer
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id, lifting_set_id, lifting_exercise_id) [pk]
  }
}

Table Workout as W {
  id int [pk, increment] // auto-increment
  week_num integer
  day_num integer // 0-6 Sun - Sat
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id) [pk]
  }
}

Table WorkoutConditioningSet as WCS {
  id int [pk, increment] // auto-increment
  conditioning_set_id int [ref: > CS.id]
  workout_id int [ref: > W.id]
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id, conditioning_set_id, workout_id) [pk]
  }
}

Table WorkoutLiftingSet as WLS {
  id int [pk, increment] // auto-increment
  lifting_set_id int [ref: > LS.id]
  workout_id int [ref: > W.id]
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id, lifting_set_id, workout_id) [pk]
  }
}

Table User as U {
  id int [pk, increment] // auto-increment
  first_name string
  last_name string
  email string [not null, unique]
  password string
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id) [pk]
  }
}

// How best to capture notes along the way?
Table UserWorkout as UW {
  id int [pk, increment] // auto-increment
  user_id int [ref: > U.id]
  workout_id int [ref: > W.id]
  complete boolean [default: false]
  date DateTime // can help with calculating which workout to show next
  notes text // can include how felt, etc.
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id, user_id, workout_id) [pk]
  }
}

// could be polymorphic by exercise type
// will this result in too many unperformanct
// query traversing?
Table UserExercise as UE {
  id int [pk, increment] // auto-increment
  user_id int [ref: > U.id]
  conditioning_exercise_id int [ref: > CE.id]
  lifting_exercise_id int [ref: > LE.id]
  user_workout_id int [ref: > UW.id]
  // complete boolean [default: false] // this may or may not make sense here
  notes text // can include weight value, time, modified, etc
  created_at timestamp
  updated_at timestamp
  Indexes {
    (id, user_id, conditioning_exercise_id, lifting_exercise_id, user_workout_id) [pk]
  }
}


// need to persist now? Can have a non-db
// table to calcualte these things
// Table Program as P {
//   id int [pk, increment] // auto-increment
//   created_at timestamp
//   updated_at timestamp
//   Indexes {
//     (id) [pk]
//   }
// }

// Table UserProgram as UP {
//   id int [pk, increment] // auto-increment
//   user_id int [ref: > U.id]
//   program_id int [ref: > P.id]
//   created_at timestamp
//   updated_at timestamp
//   Indexes {
//     (id) [pk]
//   }
// }
